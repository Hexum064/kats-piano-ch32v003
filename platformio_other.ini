; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; see https://docs.platformio.org/en/latest/projectconf/index.html
[platformio]
src_dir = .


[env]
platform = https://github.com/Community-PIO-CH32V/platform-ch32v.git
monitor_speed = 115200
; default upload and debug protocol is "wch-link", using OpenOCD and
; expecting a WCH-LinkE programming adapter.
; To use minichlink, uncomment this
;upload_protocol = minichlink
; additionally uncomment this to use ardulink on a specific COM port
;upload_flags =
;  -c
;  COM3

; for examples that use ch32v003fun as their base
[fun_base]

build_flags = -flto -Ich32v003fun -I/usr/include/newlib -lgcc -Iextralibs
; dynamically add "examples/$PIOENV" to the include path
; generate linkerscript on the fly
extra_scripts = 
  .github/add_include.py
  pre:.github/gen_ldscript.py
build_src_filter = +<ch32v003fun>

[fun_base_003]
extends = fun_base
; or genericCH32V003A4M6 or whatever, see platform link
board = ch32v003f4p6_evt_r0

[env:genericCH32V003F4U6]
extends = fun_base_003
include_dir = ./include
platform = ch32v
; board = genericCH32V003F4U6
framework = ch32v003fun
